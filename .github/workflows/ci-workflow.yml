name: Compilation & tests

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop


jobs:
  job_nano_build:
    name: Build plugin
    strategy:
      matrix:
        include:
          - SDK: "$NANOS_SDK"
            name: nanos
          - SDK: "$NANOX_SDK"
            name: nanox
          - SDK: "$NANOSP_SDK"
            name: nanosp
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Build
        run: |
          make BOLOS_SDK=${{ matrix.SDK }}
          mv bin/app.elf plugin_${{ matrix.name }}.elf

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: alkemi_${{ matrix.name }}_plugin
          path: ./*.elf

job_build_ethereum_nano_s:
    name: Build Ethereum application for Nano S testing
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest
    steps:
      - name: Checkout app-ethereum
        uses: actions/checkout@v2
        with:
          repository: LedgerHQ/app-ethereum
          ref: ${{ github.base_ref || github.ref_name }}
          submodules: recursive
      - name: Build ethereum
        run: |
          make clean
          make -j DEBUG=1 BYPASS_SIGNATURES=1 BOLOS_SDK=$NANOS_SDK CHAIN=ethereum
      - name: Move binary to test directory
        run: |
          mkdir -p ./tests/elfs/
          mv bin/app.elf ./tests/elfs/ethereum_nanos.elf
      - name: Upload plugin binary
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: tests/elfs/ethereum_nanos.elf

  job_build_ethereum_nano_sp:
    name: Build Ethereum application for Nano S Plus testing
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest
    steps:
      - name: Checkout app-ethereum
        uses: actions/checkout@v2
        with:
          repository: LedgerHQ/app-ethereum
          ref: ${{ github.base_ref || github.ref_name }}
          submodules: recursive
      - name: Build ethereum
        run: |
          make clean
          make -j DEBUG=1 BYPASS_SIGNATURES=1 BOLOS_SDK=$NANOSP_SDK CHAIN=ethereum
      - name: Move binary to test directory
        run: |
          mkdir -p ./tests/elfs/
          mv bin/app.elf ./tests/elfs/ethereum_nanosp.elf
      - name: Upload plugin binary
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: tests/elfs/ethereum_nanosp.elf

  job_build_ethereum_nano_x:
    name: Build Ethereum application for Nano X testing
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest
    steps:
      - name: Checkout app-ethereum
        uses: actions/checkout@v2
        with:
          repository: LedgerHQ/app-ethereum
          ref: ${{ github.base_ref || github.ref_name }}
          submodules: recursive
      - name: Build ethereum
        run: |
          make clean
          make -j DEBUG=1 BYPASS_SIGNATURES=1 BOLOS_SDK=$NANOX_SDK CHAIN=ethereum
      - name: Move binary to test directory
        run: |
          mkdir -p ./tests/elfs/
          mv bin/app.elf ./tests/elfs/ethereum_nanox.elf
      - name: Upload plugin binary
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: tests/elfs/ethereum_nanox.elf

  job-e2e-tests:
    name: E2E tests for NanoS, X and S+
    needs: [job_nano_build,job_build_ethereum_nano_x,job_build_ethereum_nano_s, job_build_ethereum_nano_sp]
    runs-on: ubuntu-latest
    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Install APT dependencies
        run: sudo apt-get update -y && sudo apt-get install -y libusb-1.0.0 libudev-dev

      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: "14.15.0"

      - name: Install yarn
        run: |
          npm install -g yarn

      - name: Install JS dependencies
        run: |
          cd tests && yarn install

      - name: Download app binary
        uses: actions/download-artifact@v2

      - name: Gather all artifacts
        run: |
          mv *_plugin/*.elf tests/elfs

      - name: Run zemu tests
        run: |
          cd tests && yarn test
